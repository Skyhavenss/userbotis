from telethon import TelegramClient, events, sync
import json
import asyncio
import time
import re

api_id = 29586810  # –≤–∞—à API ID
api_hash = '200318c4007974487333005f24002075'  # –≤–∞—à API Hash
admin_ids = [2127246009]  # –°–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
client = TelegramClient('userbot111', api_id, api_hash)

users_file = "users.json"
user_tasks = {}

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
def load_users():
    try:
        with open(users_file, "r") as file:
            data = json.load(file)
            if isinstance(data, dict):  # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ data —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º
                print('–£–±–µ–¥–∏–ª–∏—Å—å')
                return data
            else:
                return {}  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ data –Ω–µ —Å–ª–æ–≤–∞—Ä—å
    except (FileNotFoundError, json.JSONDecodeError):
        return {}  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞


def save_users(users):
    with open(users_file, "w") as file:
        json.dump(users, file)

users = load_users()

async def user_checker(user_id):
    print(f"Starting user_checker for {user_id}")  # Debug print
    initial_time = users.get(user_id, 0)

    try:
        # Series of messages and delays
        events = [
            (1209600, "–í—ñ—Ç–∞—é!\n\n–£ –Ω–∞—à—ñ–π –∫–æ–º–ø–∞–Ω—ñ—ó —Å—É–º-–ø–µ—á–∞–ª—å:\n–ê—Å–∏—Å—Ç–µ–Ω—Ç–∏ –ø–ª–∞—á—É—Ç—å, –∞ –∫–µ—Ä—ñ–≤–Ω–∏–∫ —É –¥–µ–ø—Ä–µ—Å—ñ—ó üò≠\n\n–¶–µ —á–µ—Ä–µ–∑ —Ç–µ, —â–æ –º–∏ –¥—É–∂–µ —Å—É–º—É—î–º–æ –∑–∞ –í–∞—à–∏–º–∏ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏ üíî\n\n–ú–æ–∂–µ, –º–∏ –Ω–µ –≤–∏–ø—Ä–∞–≤–¥–∞–ª–∏ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –∞–±–æ —É –í–∞—Å —î —Å–≤–æ—ó –ø—Ä–∏—á–∏–Ω–∏, –∞–ª–µ –¥–ª—è –Ω–∞—Å –í–∏ —Ü—ñ–Ω–Ω–∏–π –∫–ª—ñ—î–Ω—Ç —ñ –º–∏ –¥—ñ—Å—Ç–∞–Ω–µ–º–æ \"–∑—ñ—Ä–∫—É –∑ –Ω–µ–±–∞\", —â–æ–± –í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è.\n\n–ú–∏ –≥–æ—Ç–æ–≤—ñ –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ –∑—É—Å—Ç—Ä—ñ—á —ñ–∑ –Ω–∞—à–∏–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–æ–º, —â–æ–± –í–∏ –æ–∑–≤—É—á–∏–ª–∏ –ø–æ–±–∞–∂–∞–Ω–Ω—è, –∞ –º–∏ —ó—Ö —Ä–µ–∞–ª—ñ–∑—É–≤–∞–ª–∏.\n\n–î–∞–≤–∞–π—Ç–µ –º–∏ –∑ —â–µ –±—ñ–ª—å—à–æ—é —Ç—É—Ä–±–æ—Ç–æ—é —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—é –±—É–¥–µ–º–æ –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ –í–∞–º –¥–∞–ª—ñ, –∞ —Ç–∞–∫–æ–∂ –í–∞—à—ñ–π –¥—Ä—É–∂–∏–Ω—ñ üôåüèΩ\n\n–ù–∞ —á–µ—Å—Ç—å –í–∞—à–æ–≥–æ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –º–∏ –Ω–∞–≤—ñ—Ç—å –ø—ñ–¥–≥–æ—Ç—É–≤–∞–ª–∏ üéÅ –ø—Ä–∏—î–º–Ω–∏–π –±–æ–Ω—É—Å.\n\n–Ø–∫ –í–∞–º –º–æ—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è?"),
            (2629743, "1.mp4"),
            (3944615, "üåü –£—Å–ø—ñ—Ö - —Ü–µ –∫–æ–ª–∏ –Ω–∞—à—ñ –∫–ª—ñ—î–Ω—Ç–∏ –≥–æ–≤–æ—Ä—è—Ç—å –∑–∞ –Ω–∞—Å!\n\n–û–∑–Ω–∞–π–æ–º—Ç–µ—Å—å –∑ –≤—ñ–¥–≥—É–∫–∞–º–∏ —Ç–∞ –∫–µ–π—Å–∞–º–∏ –Ω–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ –≤ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª—ñ [siripro_otziv](https://t.me/siripro_otziv) —Ç–∞ –Ü–Ω—Å—Ç—ñ [siri.pro](https://www.instagram.com/siri.pro?igshid=YmMyMTA2M2Y%3D). –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å üî•"),
            (5259487, "üì£ –Ø–∫—â–æ –í–∏ —Ö–æ—á–µ—Ç–µ —Å—Ç–∞—Ç–∏ –º–∞–π—Å—Ç—Ä–æ–º –∑ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è, —â–æ–± –í–∞—à—ñ –∑–∞–¥–∞—á—ñ –∑–∞–≤–∂–¥–∏ –≤–∏–∫–æ–Ω—É–≤–∞–ª–∏—Å—å - —Ä–∞–¥–∏–º–æ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –∫—Ä—É—Ç–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–µ –≤—ñ–¥–µ–æ –±–µ–∑ –≤–æ–¥–∏ –∑ –î–º–∏—Ç—Ä–æ–º –¢–µ—Ç–µ—Ä–≤–∞–∫–æ–º —Ç–∞ –û–ª–µ–∫—Å—ñ—î–º –†–æ–Ω—ñ—Å–æ–º.\n\n–í —Ü—å–æ–º—É –≤—ñ–¥–µ–æ –≤–æ–Ω–∏ —Ä–æ–∑–ø–æ–≤—ñ–¥–∞—é—Ç—å –ø—Ä–æ –Ω–∞–π–µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—èüî•\n\n–ù–µ –ø—Ä–æ–ø—É—Å—Ç—ñ—Ç—å —Ç–∞–∫—É –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å!üò±üîù [–î–∏–≤—ñ—Ç—å—Å—è –≤—ñ–¥–µ–æ üëá](https://www.youtube.com/watch?v=X7h8UMVJ4zw) üé•"),
            (5259487, "https://www.youtube.com/watch?v=JrfhR_IW6bA"),
            (5259487, "2.mp4"),
            (5259487, "–•–æ—á–µ—Ç–µ –ø–æ–±–∞—á–∏—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ –≤—Å—å–æ–≥–æ –º–æ–∂–µ –≤–∏–∫–æ–Ω–∞—Ç–∏ –∞—Å–∏—Å—Ç–µ–Ω—Ç? üòé\n\n–ó–∞—Ö–æ–¥—å—Ç–µ —Ç–∞ –∑–Ω–∞–π–æ–º—Ç–µ—Å—å –∑ —Ä–µ–∞–ª—å–Ω–∏–º–∏ –∫–µ–π—Å–∞–º–∏ –Ω–∞—à–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ ! 1000 —ñ 1 –∑–∞–¥–∞—á–∞ –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞ [—Ç—É—Ç üëâ](https://www.notion.so/1000-1-Siri-Pro-f16de3c770d34958984ae0d4fab55a63?pvs=4) üì≤"),
            (5259487, "–ü–æ—Ä—ñ–≤–Ω—è–π—Ç–µ, —á–æ–º—É –Ω–∞—à–∞ Siri Pro –∫—Ä–∞—â–∞ –∑–∞ –æ—Ñ–ª–∞–π–Ω –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞:\n\n‚úÖ –í—ñ–¥—ñ–±—Ä–∞–Ω–∞, –Ω–∞–≤—á–µ–Ω–∞ —Ç–∞ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ - –º–æ–∂–µ —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –í–∞—à—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –≤–∂–µ —á–µ—Ä–µ–∑ 10 —Ö–≤–∏–ª–∏–Ω.\n\n‚úÖ –î–æ—Å–≤—ñ–¥—á–µ–Ω–∞, –∞–¥–∞–ø—Ç–æ–≤–∞–Ω–∞ —ñ –ø—Ä–∞—Ü—é—î –∑–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º–∏, –±—ñ–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å–∞–º–∏ –∫–æ–º–ø–∞–Ω—ñ—ó.\n\n‚úÖ –ù—ñ–∫–æ–ª–∏ –Ω–µ —Ö–≤–æ—Ä—ñ—î —ñ –Ω–µ —Ö–æ–¥–∏—Ç—å —É –≤—ñ–¥–ø—É—Å—Ç–∫—É.\n\n‚úÖ –ó –ø–∞–ª–∞—é—á–∏–º–∏ –æ—á–∏–º–∞ —Ç–∞ –≤–µ–ª–∏–∫–æ—é –º–æ—Ç–∏–≤–∞—Ü—ñ—î—é.\n\n‚úÖ –ú–æ–∂–µ—Ç–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —Å–µ—Ä–≤—ñ—Å–æ–º –∫–æ–ª–∏ –í–∞–º –∑—Ä—É—á–Ω–æ, –Ω–∞–≤—ñ—Ç—å –ø–æ –≥–æ–¥–∏–Ω–∞—Ö.\n\n‚úÖ –ü—Ä–∞—Ü—é—î —É –Ω–∞—Å –Ω–∞ —à—Ç–∞—Ç–Ω—ñ–π –æ—Å–Ω–æ–≤—ñ - –í–∞–º –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–ø–ª–∞—á—É–≤–∞—Ç–∏ –Ω—ñ—á–æ–≥–æ.\n\n–û–±–∏—Ä–∞–π—Ç–µ Siri Pro —ñ –æ—Ç—Ä–∏–º—É–π—Ç–µ –Ω–∞–π–∫—Ä–∞—â–∏–π —Å–µ—Ä–≤—ñ—Å ! üíºüí™üèÜ"),
            (5259487, "–ú–∞—î—Ç–µ –Ω–µ –±–∞–≥–∞—Ç–æ –∑–∞–¥–∞—á, –∞–ª–µ –≤–æ–Ω–∏ –≤—Å–µ –æ–¥–Ω–æ –≤—ñ–¥–±–∏—Ä–∞—é—Ç—å –≤–∞—à —á–∞—Å?\n–£ –Ω–∞—Å —î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç - –ø–æ–≥–æ–¥–∏–Ω–Ω–∞ —Å–ø—ñ–≤–ø—Ä–∞—Ü—è‚åõÔ∏è\n\n–í–∞—à–∞ –≥–æ–¥–∏–Ω–∞ –∫–æ—à—Ç—É—î –∑–Ω–∞—á–Ω–æ –¥–æ—Ä–æ–∂—á–µ, –Ω—ñ–∂ –≥–æ–¥–∏–Ω–∞ —Ä–æ–±–æ—Ç–∏ –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞!\n\n–í–∏ –ø–ª–∞—Ç–∏—Ç–µ –∑–∞ –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–¥–∞—á—ñ, –æ—Ç—Ä–∏–º—É—î—Ç–µ –∑–≤—ñ—Ç —ñ –Ω–∞—Å–æ–ª–æ–¥–∂—É—î—Ç–µ—Å—å –∂–∏—Ç—Ç—è–º. –î–∞–≤–∞–π—Ç–µ –∑–∞—Ç–µ—Å—Ç—É—î–º–æ? üòâ"),
            (5259487, "–ü—Ä–∏–≤—ñ—Ç!\n\n–í–∞–º –Ω–µ –ø—ñ–¥—Ö–æ–¥–∏—Ç—å –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç? –í–∏ —Ö–æ—Ç—ñ–ª–∏, —â–æ–± —É –í–∞—Å –±—É–≤ –∞—Å–∏—Å—Ç–µ–Ω—Ç –≤ –∫–æ–º–∞–Ω–¥—ñ? üòä\n\n–ú–∏ –∑ —Ä–∞–¥—ñ—Å—Ç—é –ø—ñ–¥–±–µ—Ä–µ–º–æ –í–∞–º —Ç–æ–ø–æ–≤–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞!\n\n–ú–∏ –º–∞—î–º–æ –¥—É–∂–µ –≤–µ–ª–∏–∫–∏–π –¥–æ—Å–≤—ñ–¥, —Å–≤–æ—é –±–∞–∑—É –∞—Å–∏—Å—Ç–µ–Ω—Ç—ñ–≤, –±–∞–≥–∞—Ç–æ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤, –∞ —Ç–∞–∫–æ–∂ –≥–∞—Ä–∞–Ω—Ç—ñ—é –Ω–∞ –ø—ñ–¥—ñ–±—Ä–∞–Ω–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ üîùüëç\n\n–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ—ó –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –≤–∂–µ –∑ –ø—ñ–¥–±–æ—Ä—É –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥—É üì≤"),
            (5259487, "–ø–æ—Å–∞–¥–æ–≤–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞.pdf"),
            (5259487, "–û–π-–æ–π!\n\n–°–ø–ª–∏–≤ —Ä—ñ–∫, —ñ –Ω–∞–º —Ç–∞–∫ —Å—É–º–Ω–æ –±–µ–∑ –í–∞—Å! ü•∫ –ú–∏ —Ç—É—Ç –¥—É–º–∞–ª–∏, –º–æ–∂–ª–∏–≤–æ, –í–∏ –ø—Ä–æ –Ω–∞—Å –∑–∞–±—É–ª–∏? –ê–ª–µ –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —Ç–∞–∫ ‚Äì –º–∏ –∑–∞–≤–∂–¥–∏ —Ç—É—Ç, —â–æ–± –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –í–∞—à—ñ –∑–∞–¥–∞—á—ñ üòä\n\n–©–æ —Å–∫–∞–∂–µ—Ç–µ, –∑–Ω–æ–≤—É –∑ –Ω–∞–º–∏ –≤ —Ü—å–æ–º—É —Ä–æ—Ü—ñ? –û–±—ñ—Ü—è—î–º–æ, —â–æ –Ω–µ –±—É–¥–µ–º–æ –í–∞–º –Ω–∞–±—Ä–∏–¥–∞—Ç–∏ üòá\n\n–ß–µ–∫–∞—î–º–æ –Ω–∞ –í–∞—Å, —è–∫ –∑–∞–≤–∂–¥–∏!ü§ó")
        ]



        for delay, content in events:
            await asyncio.sleep(delay)  # Wait for the specific delay

            current_time = time.time()
            if current_time - users.get(user_id, 0) < delay:
                print(f"Exiting user_checker for {user_id} due to activity")  # Debug print
                return  # User was active, so don't send the message

            try:
                if content.endswith('.mp4'):
                    print(f"Sending MP4 to {user_id}")  # Debug print
                    await client.send_file(int(user_id), content)  # Send the video
                    # Your logic to send MP4
                elif content.endswith('.pdf'):
                    print(f"Sending PDF file to {user_id}")  # Debug print
                    await client.send_file(int(user_id), content)  # Send the PDF
                else:
                    print(f"Sending message to {user_id}")  # Debug print
                    await client.send_message(int(user_id), content, link_preview=False, parse_mode='md')  # Send the message
            except Exception as e:
                print(f"Couldn't send to {user_id}, error: {e}")

            users[user_id] = current_time  # Update the last active time
            save_users(users)  # Save the updated time
    finally:
        # Clean up code, if any
        if user_id in user_tasks:
            del user_tasks[user_id]  # Clean up the task when done or cancelled


async def new_message_handler(event):
    user_id = str(event.sender_id)
    if user_id in users:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        users[user_id] = time.time()  # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        save_users(users)

        if user_id in user_tasks:
            user_tasks[user_id].cancel()  # –û—Ç–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_tasks[user_id] = asyncio.create_task(user_checker(user_id))


@client.on(events.NewMessage(pattern='/add_user'))
async def add_user(event):
    if event.sender_id in admin_ids:
        user_id_to_add = re.search(r'/add_user (\d+)', event.message.text)
        if user_id_to_add:
            user_id_to_add = user_id_to_add.group(1)
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
            if user_id_to_add not in users:
                users[user_id_to_add] = time.time()  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º
                save_users(users)
                await event.respond(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id_to_add} –¥–æ–±–∞–≤–ª–µ–Ω.")
                # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                client.loop.create_task(user_checker(user_id_to_add))
            else:
                await event.respond("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω.")
        else:
            await event.respond("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")


@client.on(events.NewMessage(pattern='/del_user'))
async def del_user(event):
    if event.sender_id in admin_ids:
        user_id_to_del = re.search(r'/del_user (\d+)', event.message.text)
        if user_id_to_del:
            user_id_to_del = user_id_to_del.group(1)
            if user_id_to_del in users:
                del users[user_id_to_del]  # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ª–µ–∂–µ–Ω–∏—è
                save_users(users)
                await event.respond(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id_to_del} —É–¥–∞–ª–µ–Ω.")
            else:
                await event.respond("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

@client.on(events.NewMessage(pattern='/list_users'))
async def list_users(event):
    if event.sender_id in admin_ids:
        message = "–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n" + "\n".join(users)
        await event.respond(message or "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.")
        
client.on(events.NewMessage(incoming=True))(new_message_handler)  # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

client.start()
for user_id in users.keys():
    user_tasks[user_id] = client.loop.create_task(user_checker(user_id))

client.run_until_disconnected()